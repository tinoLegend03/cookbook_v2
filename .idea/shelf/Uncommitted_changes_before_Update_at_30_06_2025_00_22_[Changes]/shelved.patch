Index: app/src/main/java/com/project/roomdb_replica_ufficiale/fragments/add/AddFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.project.roomdb_replica_ufficiale.fragments.add\r\n\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.util.Log\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.AdapterView\r\nimport android.widget.ArrayAdapter\r\nimport android.widget.Toast\r\nimport androidx.activity.OnBackPressedCallback\r\nimport androidx.appcompat.app.AlertDialog\r\nimport androidx.core.widget.doAfterTextChanged\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport androidx.navigation.fragment.findNavController\r\nimport androidx.navigation.navOptions\r\nimport androidx.recyclerview.widget.DefaultItemAnimator\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport com.google.android.material.chip.Chip\r\nimport com.project.roomdb_replica_ufficiale.R\r\nimport com.project.roomdb_replica_ufficiale.data.ingrediente.IngredienteQuantificato\r\nimport com.project.roomdb_replica_ufficiale.data.istruzione.Istruzione\r\nimport com.project.roomdb_replica_ufficiale.data.ricetta.Ricetta\r\nimport com.project.roomdb_replica_ufficiale.data.ricetta.RicettaViewModel\r\nimport com.project.roomdb_replica_ufficiale.databinding.FragmentAddBinding\r\nimport com.project.roomdb_replica_ufficiale.relations.ricettaIngredienteRelation.RicettaIngrediente\r\n\r\n\r\nclass AddFragment : Fragment() {\r\n\r\n    private var _binding: FragmentAddBinding? = null\r\n    private val binding get() = _binding!!\r\n    private lateinit var mRecipeViewModel: RicettaViewModel\r\n\r\n    var ingrList: MutableList<IngredienteQuantificato> = mutableListOf()\r\n    var ingrStep: MutableList<String> = mutableListOf()\r\n\r\n    val allergeniEuropei = listOf(\r\n        \"Glutine\", \"Crostacei\", \"Uova\", \"Pesce\", \"Arachidi\",\r\n        \"Soia\", \"Latte\", \"Frutta a guscio\", \"Sedano\", \"Senape\",\r\n        \"Sesamo\", \"Anidride solforosa\", \"Lupini\", \"Molluschi\"\r\n    )\r\n\r\n    /* Back-press handling */\r\n    private val callback = object : OnBackPressedCallback(false) {\r\n        override fun handleOnBackPressed() {\r\n            AlertDialog.Builder(requireContext()).apply {\r\n                setTitle(\"Stai uscendo senza salvare\")\r\n                setMessage(\"Salva per non perdere le modifiche\")\r\n                setPositiveButton(\"Save\") { _, _ ->\r\n                    insertDataToDatabase()\r\n                }\r\n                setNegativeButton(\"Delete\") { _, _ ->\r\n                    Toast.makeText(requireContext(), \"Ricetta non salvata\", Toast.LENGTH_SHORT).show()\r\n                    isEnabled = false\r\n                    requireActivity().onBackPressedDispatcher.onBackPressed()\r\n                }\r\n                setNeutralButton(\"Cancel\") { _, _ ->\r\n                }\r\n                setCancelable(false)\r\n            }.show()\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        var ctx = requireContext()\r\n\r\n        _binding = FragmentAddBinding.inflate(inflater, container, false)\r\n        val view = binding.root\r\n\r\n        val chipGroup = binding.chipGroupAllergeni\r\n        for (allergene in allergeniEuropei) {\r\n            val chip = Chip(requireContext()).apply {\r\n                text = allergene\r\n                isCheckable = true\r\n                isClickable = true\r\n            }\r\n            chipGroup.addView(chip)\r\n        }\r\n\r\n        mRecipeViewModel = ViewModelProvider(this).get(RicettaViewModel::class.java)\r\n\r\n        binding.addBtn.setOnClickListener {\r\n            insertDataToDatabase()\r\n        }\r\n\r\n\r\n        //GESTIONE ADAPTER\r\n        val animator = DefaultItemAnimator()\r\n        animator.removeDuration = 0\r\n        val adapterIngrediente = AdapterIngrediente(ingrList)\r\n\r\n        adapterIngrediente.setOnItemClickListener(object : AdapterIngrediente.OnItemClickListener {\r\n            override fun onItemClick(pos: Int) {\r\n                Log.d(\"ON ITEM CLICK\", \"should delete elem $pos\")\r\n                adapterIngrediente.ingrList.removeAt(pos)\r\n                adapterIngrediente.notifyItemRemoved(pos)\r\n                adapterIngrediente.notifyItemRangeChanged(pos, adapterIngrediente.itemCount-pos)\r\n            }\r\n        })\r\n\r\n        binding.ingredientContainer.apply {\r\n            adapter  = adapterIngrediente\r\n            layoutManager = LinearLayoutManager(ctx)\r\n            itemAnimator = animator\r\n        }\r\n\r\n        binding.addIngredientBtn.setOnClickListener {\r\n            Log.d(\"PRE ADD INGR\", \"${adapterIngrediente.itemCount}\")\r\n            ingrList.add(IngredienteQuantificato(\"\",\"\"))\r\n            adapterIngrediente.notifyItemInserted(adapterIngrediente.itemCount - 1)\r\n            Log.d(\"SIZE INGR\", \"${adapterIngrediente.itemCount}\")\r\n        }\r\n\r\n        val adapterStep = AdapterStep(ingrStep)\r\n        adapterStep.setOnItemClickListener(object : AdapterStep.OnItemClickListener {\r\n            override fun onItemClick(pos: Int) {\r\n                Log.d(\"ON ITEM CLICK\", \"should delete\")\r\n                adapterStep.stepList.removeAt(pos)\r\n                adapterStep.notifyDataSetChanged()\r\n                Log.d(\"POST REMOVED\", \"${adapterIngrediente.itemCount}\")\r\n            }\r\n        })\r\n\r\n        binding.stepContainer.adapter = adapterStep\r\n        binding.stepContainer.layoutManager = LinearLayoutManager(ctx)\r\n\r\n        binding.addStepBtn.setOnClickListener {\r\n            ingrStep.add(\"\")\r\n            adapterStep.notifyItemInserted(adapterStep.itemCount - 1)\r\n        }\r\n\r\n        //GESTIONE SPINNER\r\n        ArrayAdapter.createFromResource(ctx, R.array.level_array,\r\n            android.R.layout.simple_spinner_item).also { spinnerAdapter ->\r\n            spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)\r\n            binding.addRecipeLevelEt.adapter = spinnerAdapter\r\n        }\r\n\r\n        binding.addRecipeLevelEt.onItemSelectedListener = object : AdapterView.OnItemSelectedListener{\r\n            var launch = true\r\n            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int,\r\n                                        id: Long) {\r\n                if(launch){\r\n                    launch = false\r\n                } else {\r\n                    callback.isEnabled = true\r\n                    Log.d(\"SPINNER\", \"selezionato\")\r\n                }\r\n            }\r\n\r\n            override fun onNothingSelected(parent: AdapterView<*>?) {\r\n                Log.d(\"SPINNER\", \"non selezionato\")\r\n            }\r\n\r\n        }\r\n\r\n        ArrayAdapter.createFromResource(ctx, R.array.category_array,\r\n            android.R.layout.simple_spinner_item).also { spinnerAdapter ->\r\n            spinnerAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item)\r\n            binding.addRecipeCategoryEt.adapter = spinnerAdapter\r\n        }\r\n\r\n        binding.addRecipeCategoryEt.onItemSelectedListener = object : AdapterView.OnItemSelectedListener{\r\n            var launch = true\r\n            override fun onItemSelected(parent: AdapterView<*>?, view: View?, position: Int,\r\n                                        id: Long) {\r\n                if(launch){\r\n                    launch = false\r\n                } else {\r\n                    callback.isEnabled = true\r\n                    Log.d(\"SPINNER\", \"selezionato\")\r\n                }\r\n            }\r\n\r\n            override fun onNothingSelected(parent: AdapterView<*>?) {\r\n                Log.d(\"SPINNER\", \"non selezionato\")\r\n            }\r\n\r\n        }\r\n\r\n        binding.addDurationEt.doAfterTextChanged { callback.isEnabled = true }\r\n        binding.addRecipeNameEt.doAfterTextChanged { callback.isEnabled = true }\r\n        binding.addRecipeDescriptionEt.doAfterTextChanged { callback.isEnabled = true }\r\n\r\n\r\n        requireActivity().onBackPressedDispatcher.addCallback(viewLifecycleOwner, callback)\r\n        return view\r\n    }\r\n\r\n    override fun onDestroyView() {\r\n        super.onDestroyView()\r\n        _binding = null\r\n    }\r\n\r\n\r\n\r\n    private fun insertDataToDatabase() {\r\n        val nomeRicetta = binding.addRecipeNameEt.text.toString()\r\n        val descrizione = binding.addRecipeDescriptionEt.text.toString()\r\n        val durata = binding.addDurationEt.text\r\n\r\n        val posLevel = binding.addRecipeLevelEt.lastVisiblePosition\r\n        val posCategoria = binding.addRecipeCategoryEt.lastVisiblePosition\r\n\r\n        if(posLevel == 0 || posCategoria == 0) {\r\n            Toast.makeText(requireContext(), \"Please fill put all fields.\", Toast.LENGTH_LONG).show()\r\n            return\r\n        }\r\n        val livello = binding.addRecipeLevelEt.selectedItem.toString()\r\n        val categoria = binding.addRecipeCategoryEt.selectedItem.toString()\r\n\r\n        val ultimaModifica = System.currentTimeMillis()\r\n        val ultimaEsecuzione = System.currentTimeMillis()\r\n\r\n        val count = 0\r\n\r\n        val istruzioni = mutableListOf<Istruzione>()\r\n        for (i in 0 until binding.stepContainer.childCount) {\r\n            val textStep = ingrStep[i].toString().trim()\r\n            if(textStep.isNotEmpty()){\r\n                val istr = Istruzione(0, 0, i+1, textStep)\r\n                istruzioni.add(istr)\r\n            }\r\n        }\r\n\r\n\r\n        val ingredientiList = mutableListOf<RicettaIngrediente>()\r\n        for(ingrediente in ingrList) {\r\n            if(ingrediente.nomeIngrediente.isNotEmpty() && ingrediente.quantita.isNotEmpty()){\r\n                val ric = RicettaIngrediente(0, ingrediente.nomeIngrediente, ingrediente.quantita)\r\n                Log.d(\"RicettaIngrediente\", ingrediente.nomeIngrediente)\r\n                ingredientiList.add(ric)\r\n            }\r\n        }\r\n\r\n        val allergeniSelezionati = mutableListOf<String>()\r\n        for (i in 0 until binding.chipGroupAllergeni.childCount) {\r\n            val chip = binding.chipGroupAllergeni.getChildAt(i) as Chip\r\n            if (chip.isChecked) {\r\n                allergeniSelezionati.add(chip.text.toString())\r\n            }\r\n        }\r\n\r\n\r\n        if(inputCheck(nomeRicetta, durata, livello, categoria, descrizione)){\r\n            //Create Recipe Object\r\n            val ricetta = Ricetta(0L, nomeRicetta, Integer.parseInt(durata.toString()), livello, categoria, descrizione, ultimaModifica, ultimaEsecuzione, count, allergeniSelezionati)\r\n            //Add Data to Database\r\n            mRecipeViewModel.inserisciRicettaCompleta(ricetta, istruzioni, ingredientiList)\r\n            //mRecipeViewModel.nuovaRicetta(ricetta)\r\n            Toast.makeText(requireContext(), \"Succesfully added!\", Toast.LENGTH_LONG).show()\r\n            //Navigate Back\r\n            findNavController().popBackStack()\r\n            //Svuota lo stack finche trova Home in modo tale che da List ritorni a Home\r\n            val navOptions = navOptions {\r\n                popUpTo(R.id.homeFragment) { inclusive = false }\r\n            }\r\n            findNavController().navigate(\r\n                R.id.listFragment,\r\n                null,\r\n                navOptions\r\n            )\r\n        }else{\r\n            Toast.makeText(requireContext(), \"Please fill put all fields.\", Toast.LENGTH_LONG).show()\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private fun inputCheck(nomeRicetta: String, durata: Editable, livello: String, categoria: String, descrizione: String): Boolean{\r\n\r\n        if(nomeRicetta.isEmpty() || durata.isEmpty() || livello.isEmpty() || categoria.isEmpty() || descrizione.isEmpty()){\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n\r\n//        return !(TextUtils.isEmpty(nomeRicetta) && durata.isEmpty() && TextUtils.isEmpty(livello) && TextUtils.isEmpty(categoria) && TextUtils.isEmpty(descrizione))\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/project/roomdb_replica_ufficiale/fragments/add/AddFragment.kt b/app/src/main/java/com/project/roomdb_replica_ufficiale/fragments/add/AddFragment.kt
--- a/app/src/main/java/com/project/roomdb_replica_ufficiale/fragments/add/AddFragment.kt	(revision 5d7ca15ca9628fbe6e96322e5fb5a32670299b7d)
+++ b/app/src/main/java/com/project/roomdb_replica_ufficiale/fragments/add/AddFragment.kt	(date 1751233464326)
@@ -282,7 +282,6 @@
             return true
         }
 
-//        return !(TextUtils.isEmpty(nomeRicetta) && durata.isEmpty() && TextUtils.isEmpty(livello) && TextUtils.isEmpty(categoria) && TextUtils.isEmpty(descrizione))
     }
 
 }
\ No newline at end of file
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<resources>\r\n    <color name=\"black\">#FF000000</color>\r\n    <color name=\"white\">#FFFFFFFF</color>\r\n    <color name=\"green\">#2ecc71</color>\r\n    <color name=\"orange\">#f39c12</color>\r\n    <color name=\"purple_200\">#FFBB86FC</color>\r\n    <color name=\"purple_700\">#FF3700B3</color>\r\n    <color name=\"teal_200\">#FF03DAC5</color>\r\n    <color name=\"teal_700\">#FF018786</color>\r\n    <color name=\"blu\">#3340ff</color>\r\n    <color name=\"red\">#ff0000</color>\r\n    <color name=\"yellow\">#ffff00</color>\r\n</resources>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/colors.xml b/app/src/main/res/values/colors.xml
--- a/app/src/main/res/values/colors.xml	(revision 5d7ca15ca9628fbe6e96322e5fb5a32670299b7d)
+++ b/app/src/main/res/values/colors.xml	(date 1751235594803)
@@ -11,4 +11,5 @@
     <color name="blu">#3340ff</color>
     <color name="red">#ff0000</color>
     <color name="yellow">#ffff00</color>
+    <color name="add_color_tint">#FFOOO00</color>
 </resources>
\ No newline at end of file
Index: app/src/main/res/layout/fragment_add.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<ScrollView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    android:fillViewport=\"true\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/formContainer\"\r\n        android:orientation=\"vertical\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:padding=\"16dp\">\r\n\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/guideline_start_horizontal\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\"\r\n            app:layout_constraintGuide_begin=\"5dp\" />\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/guideline_start_vertical\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintGuide_begin=\"3dp\" />\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/guideline_end_vertical\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintGuide_end=\"3dp\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/addRecipeName_et\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"@string/nome_ricetta\"\r\n            android:inputType=\"text\"\r\n            android:autofillHints=\"username\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/guideline_start_horizontal\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            />\r\n\r\n        <EditText\r\n            android:id=\"@+id/addRecipeDescription_et\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"@string/descrizione\"\r\n            android:inputType=\"text\"\r\n            android:autofillHints=\"username\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addRecipeName_et\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/addRecipeLevel_et\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_width=\"171dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:text=\"@string/difficolta\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addRecipeDescription_et\" />\r\n\r\n        <Spinner\r\n            android:id=\"@+id/addRecipeCategory_et\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:layout_width=\"171dp\"\r\n            android:layout_height=\"48dp\"\r\n            android:text=\"@string/categoria\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/guideline_end_vertical\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addRecipeDescription_et\" />\r\n\r\n        <EditText\r\n            android:id=\"@+id/addDuration_et\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"@string/durata\"\r\n            android:inputType=\"number\"\r\n            android:autofillHints=\"username\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addRecipeCategory_et\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            android:layout_marginTop=\"5dp\"\r\n            />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textIngredienti\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/aggiungi_ingrediente\"\r\n            style=\"@style/textView_style\"\r\n            android:textSize=\"18sp\"\r\n            android:layout_marginTop=\"5dp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addDuration_et\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            android:textStyle=\"bold\"/>\r\n\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/addIngredientBtn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:contentDescription=\"@string/aggiungi_ingrediente\"\r\n            android:src=\"@drawable/ic_add\"\r\n            android:background=\"@drawable/ic_add\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addDuration_et\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/guideline_end_vertical\"\r\n            android:layout_marginEnd=\"10dp\"\r\n            />\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/ingredientContainer\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addIngredientBtn\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0\"/>\r\n\r\n\r\n        <TextView\r\n            android:layout_marginTop=\"5dp\"\r\n            android:id=\"@+id/textSteps\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/aggiungi_step\"\r\n            android:textSize=\"18sp\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/ingredientContainer\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            android:textStyle=\"bold\"/>\r\n\r\n\r\n        <ImageButton\r\n            android:layout_marginTop=\"5dp\"\r\n            android:id=\"@+id/addStepBtn\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:contentDescription=\"@string/aggiungi_step\"\r\n            android:src=\"@drawable/ic_add\"\r\n            android:background=\"@drawable/ic_add\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/ingredientContainer\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/guideline_end_vertical\"\r\n            android:layout_marginEnd=\"10dp\" />\r\n\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/stepContainer\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_end_vertical\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addStepBtn\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintVertical_bias=\"0\"/>\r\n\r\n        <TextView\r\n            android:id=\"@+id/addAllergeni_et\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/seleziona_allergeni\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/stepContainer\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            android:layout_marginStart=\"5dp\"\r\n            android:textSize=\"18sp\"\r\n            android:textStyle=\"bold\"/>\r\n\r\n        <com.google.android.material.chip.ChipGroup\r\n            android:id=\"@+id/chipGroupAllergeni\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            app:singleSelection=\"false\"\r\n            app:selectionRequired=\"false\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/addAllergeni_et\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            />\r\n\r\n        <Button\r\n            android:id=\"@+id/add_btn\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"@string/aggiungi\"\r\n            app:layout_constraintTop_toBottomOf=\"@id/chipGroupAllergeni\"\r\n            app:layout_constraintStart_toStartOf=\"@id/guideline_start_vertical\"\r\n            app:layout_constraintEnd_toEndOf=\"@id/guideline_end_vertical\"\r\n            />\r\n\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</ScrollView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/fragment_add.xml b/app/src/main/res/layout/fragment_add.xml
--- a/app/src/main/res/layout/fragment_add.xml	(revision 5d7ca15ca9628fbe6e96322e5fb5a32670299b7d)
+++ b/app/src/main/res/layout/fragment_add.xml	(date 1751235562543)
@@ -102,7 +102,8 @@
             android:layout_height="wrap_content"
             android:contentDescription="@string/aggiungi_ingrediente"
             android:src="@drawable/ic_add"
-            android:background="@drawable/ic_add"
+            app:tint="@color/add_color_tint"
+            android:background="?attr/selectableItemBackgroundBorderless"
             app:layout_constraintTop_toBottomOf="@id/addDuration_et"
             app:layout_constraintEnd_toEndOf="@id/guideline_end_vertical"
             android:layout_marginEnd="10dp"
Index: app/src/main/res/values-night/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values-night/colors.xml b/app/src/main/res/values-night/colors.xml
new file mode 100644
--- /dev/null	(date 1751235529970)
+++ b/app/src/main/res/values-night/colors.xml	(date 1751235529970)
@@ -0,0 +1,15 @@
+<?xml version="1.0" encoding="utf-8"?>
+<resources>
+    <color name="black">#FF000000</color>
+    <color name="white">#FFFFFFFF</color>
+    <color name="green">#2ecc71</color>
+    <color name="orange">#f39c12</color>
+    <color name="purple_200">#FFBB86FC</color>
+    <color name="purple_700">#FF3700B3</color>
+    <color name="teal_200">#FF03DAC5</color>
+    <color name="teal_700">#FF018786</color>
+    <color name="blu">#3340ff</color>
+    <color name="red">#ff0000</color>
+    <color name="yellow">#ffff00</color>
+    <color name="add_color_tint">#FFFFFFFF</color>
+</resources>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 5d7ca15ca9628fbe6e96322e5fb5a32670299b7d)
+++ b/.idea/vcs.xml	(date 1751211925739)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n          <Target type=\"DEFAULT_BOOT\">\r\n            <handle>\r\n            </handle>\r\n          </Target>\r\n        </DropdownSelection>\r\n        <DialogSelection />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 5d7ca15ca9628fbe6e96322e5fb5a32670299b7d)
+++ b/.idea/deploymentTargetSelector.xml	(date 1751232995733)
@@ -4,8 +4,10 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
+        <DropdownSelection timestamp="2025-06-29T21:32:27.751089600Z">
           <Target type="DEFAULT_BOOT">
             <handle>
+              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\albig\.android\avd\Pixel_8.avd" />
             </handle>
           </Target>
         </DropdownSelection>
